// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/percent.proto

#ifndef PROTOBUF_INCLUDED_envoy_2ftype_2fpercent_2eproto
#define PROTOBUF_INCLUDED_envoy_2ftype_2fpercent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_envoy_2ftype_2fpercent_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_envoy_2ftype_2fpercent_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_envoy_2ftype_2fpercent_2eproto();
namespace envoy {
namespace type {
class FractionalPercent;
class FractionalPercentDefaultTypeInternal;
extern FractionalPercentDefaultTypeInternal _FractionalPercent_default_instance_;
class Percent;
class PercentDefaultTypeInternal;
extern PercentDefaultTypeInternal _Percent_default_instance_;
}  // namespace type
}  // namespace envoy
namespace google {
namespace protobuf {
template<> ::envoy::type::FractionalPercent* Arena::CreateMaybeMessage<::envoy::type::FractionalPercent>(Arena*);
template<> ::envoy::type::Percent* Arena::CreateMaybeMessage<::envoy::type::Percent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace envoy {
namespace type {

enum FractionalPercent_DenominatorType {
  FractionalPercent_DenominatorType_HUNDRED = 0,
  FractionalPercent_DenominatorType_TEN_THOUSAND = 1,
  FractionalPercent_DenominatorType_MILLION = 2,
  FractionalPercent_DenominatorType_FractionalPercent_DenominatorType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FractionalPercent_DenominatorType_FractionalPercent_DenominatorType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool FractionalPercent_DenominatorType_IsValid(int value);
const FractionalPercent_DenominatorType FractionalPercent_DenominatorType_DenominatorType_MIN = FractionalPercent_DenominatorType_HUNDRED;
const FractionalPercent_DenominatorType FractionalPercent_DenominatorType_DenominatorType_MAX = FractionalPercent_DenominatorType_MILLION;
const int FractionalPercent_DenominatorType_DenominatorType_ARRAYSIZE = FractionalPercent_DenominatorType_DenominatorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FractionalPercent_DenominatorType_descriptor();
inline const ::std::string& FractionalPercent_DenominatorType_Name(FractionalPercent_DenominatorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FractionalPercent_DenominatorType_descriptor(), value);
}
inline bool FractionalPercent_DenominatorType_Parse(
    const ::std::string& name, FractionalPercent_DenominatorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FractionalPercent_DenominatorType>(
    FractionalPercent_DenominatorType_descriptor(), name, value);
}
// ===================================================================

class Percent :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.type.Percent) */ {
 public:
  Percent();
  virtual ~Percent();

  Percent(const Percent& from);

  inline Percent& operator=(const Percent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Percent(Percent&& from) noexcept
    : Percent() {
    *this = ::std::move(from);
  }

  inline Percent& operator=(Percent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Percent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Percent* internal_default_instance() {
    return reinterpret_cast<const Percent*>(
               &_Percent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Percent* other);
  friend void swap(Percent& a, Percent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Percent* New() const final {
    return CreateMaybeMessage<Percent>(nullptr);
  }

  Percent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Percent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Percent& from);
  void MergeFrom(const Percent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Percent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double value = 1 [(.validate.rules) = {
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:envoy.type.Percent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_envoy_2ftype_2fpercent_2eproto;
};
// -------------------------------------------------------------------

class FractionalPercent :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.type.FractionalPercent) */ {
 public:
  FractionalPercent();
  virtual ~FractionalPercent();

  FractionalPercent(const FractionalPercent& from);

  inline FractionalPercent& operator=(const FractionalPercent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FractionalPercent(FractionalPercent&& from) noexcept
    : FractionalPercent() {
    *this = ::std::move(from);
  }

  inline FractionalPercent& operator=(FractionalPercent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FractionalPercent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FractionalPercent* internal_default_instance() {
    return reinterpret_cast<const FractionalPercent*>(
               &_FractionalPercent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FractionalPercent* other);
  friend void swap(FractionalPercent& a, FractionalPercent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FractionalPercent* New() const final {
    return CreateMaybeMessage<FractionalPercent>(nullptr);
  }

  FractionalPercent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FractionalPercent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FractionalPercent& from);
  void MergeFrom(const FractionalPercent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FractionalPercent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FractionalPercent_DenominatorType DenominatorType;
  static const DenominatorType HUNDRED =
    FractionalPercent_DenominatorType_HUNDRED;
  static const DenominatorType TEN_THOUSAND =
    FractionalPercent_DenominatorType_TEN_THOUSAND;
  static const DenominatorType MILLION =
    FractionalPercent_DenominatorType_MILLION;
  static inline bool DenominatorType_IsValid(int value) {
    return FractionalPercent_DenominatorType_IsValid(value);
  }
  static const DenominatorType DenominatorType_MIN =
    FractionalPercent_DenominatorType_DenominatorType_MIN;
  static const DenominatorType DenominatorType_MAX =
    FractionalPercent_DenominatorType_DenominatorType_MAX;
  static const int DenominatorType_ARRAYSIZE =
    FractionalPercent_DenominatorType_DenominatorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DenominatorType_descriptor() {
    return FractionalPercent_DenominatorType_descriptor();
  }
  static inline const ::std::string& DenominatorType_Name(DenominatorType value) {
    return FractionalPercent_DenominatorType_Name(value);
  }
  static inline bool DenominatorType_Parse(const ::std::string& name,
      DenominatorType* value) {
    return FractionalPercent_DenominatorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 numerator = 1;
  void clear_numerator();
  static const int kNumeratorFieldNumber = 1;
  ::google::protobuf::uint32 numerator() const;
  void set_numerator(::google::protobuf::uint32 value);

  // .envoy.type.FractionalPercent.DenominatorType denominator = 2 [(.validate.rules) = {
  void clear_denominator();
  static const int kDenominatorFieldNumber = 2;
  ::envoy::type::FractionalPercent_DenominatorType denominator() const;
  void set_denominator(::envoy::type::FractionalPercent_DenominatorType value);

  // @@protoc_insertion_point(class_scope:envoy.type.FractionalPercent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 numerator_;
  int denominator_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_envoy_2ftype_2fpercent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Percent

// double value = 1 [(.validate.rules) = {
inline void Percent::clear_value() {
  value_ = 0;
}
inline double Percent::value() const {
  // @@protoc_insertion_point(field_get:envoy.type.Percent.value)
  return value_;
}
inline void Percent::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:envoy.type.Percent.value)
}

// -------------------------------------------------------------------

// FractionalPercent

// uint32 numerator = 1;
inline void FractionalPercent::clear_numerator() {
  numerator_ = 0u;
}
inline ::google::protobuf::uint32 FractionalPercent::numerator() const {
  // @@protoc_insertion_point(field_get:envoy.type.FractionalPercent.numerator)
  return numerator_;
}
inline void FractionalPercent::set_numerator(::google::protobuf::uint32 value) {
  
  numerator_ = value;
  // @@protoc_insertion_point(field_set:envoy.type.FractionalPercent.numerator)
}

// .envoy.type.FractionalPercent.DenominatorType denominator = 2 [(.validate.rules) = {
inline void FractionalPercent::clear_denominator() {
  denominator_ = 0;
}
inline ::envoy::type::FractionalPercent_DenominatorType FractionalPercent::denominator() const {
  // @@protoc_insertion_point(field_get:envoy.type.FractionalPercent.denominator)
  return static_cast< ::envoy::type::FractionalPercent_DenominatorType >(denominator_);
}
inline void FractionalPercent::set_denominator(::envoy::type::FractionalPercent_DenominatorType value) {
  
  denominator_ = value;
  // @@protoc_insertion_point(field_set:envoy.type.FractionalPercent.denominator)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace envoy

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::envoy::type::FractionalPercent_DenominatorType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::type::FractionalPercent_DenominatorType>() {
  return ::envoy::type::FractionalPercent_DenominatorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_envoy_2ftype_2fpercent_2eproto
