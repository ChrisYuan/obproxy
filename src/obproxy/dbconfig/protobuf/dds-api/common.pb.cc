// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MetaData_AnnotationsEntry_DoNotUse_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MetaData_LabelsEntry_DoNotUse_common_2eproto;
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {
class MetaData_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaData_AnnotationsEntry_DoNotUse> _instance;
} _MetaData_AnnotationsEntry_DoNotUse_default_instance_;
class MetaData_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaData_LabelsEntry_DoNotUse> _instance;
} _MetaData_LabelsEntry_DoNotUse_default_instance_;
class MetaDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaData> _instance;
} _MetaData_default_instance_;
class MarkedMultiReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarkedMultiReference> _instance;
} _MarkedMultiReference_default_instance_;
}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com
static void InitDefaultsMetaData_AnnotationsEntry_DoNotUse_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::alipay::dds::api::v1::_MetaData_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse();
  }
  ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetaData_AnnotationsEntry_DoNotUse_common_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetaData_AnnotationsEntry_DoNotUse_common_2eproto}, {}};

static void InitDefaultsMetaData_LabelsEntry_DoNotUse_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::alipay::dds::api::v1::_MetaData_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse();
  }
  ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetaData_LabelsEntry_DoNotUse_common_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetaData_LabelsEntry_DoNotUse_common_2eproto}, {}};

static void InitDefaultsMetaData_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::alipay::dds::api::v1::_MetaData_default_instance_;
    new (ptr) ::com::alipay::dds::api::v1::MetaData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::alipay::dds::api::v1::MetaData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetaData_common_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetaData_common_2eproto}, {
      &scc_info_MetaData_AnnotationsEntry_DoNotUse_common_2eproto.base,
      &scc_info_MetaData_LabelsEntry_DoNotUse_common_2eproto.base,}};

static void InitDefaultsMarkedMultiReference_common_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::alipay::dds::api::v1::_MarkedMultiReference_default_instance_;
    new (ptr) ::com::alipay::dds::api::v1::MarkedMultiReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::alipay::dds::api::v1::MarkedMultiReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MarkedMultiReference_common_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMarkedMultiReference_common_2eproto}, {}};

void InitDefaults_common_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MetaData_AnnotationsEntry_DoNotUse_common_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaData_LabelsEntry_DoNotUse_common_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaData_common_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MarkedMultiReference_common_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_common_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_common_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_common_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData, name_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData, namespace__),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData, annotations_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MetaData, labels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, mark_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, parent_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, namespace__),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, kind_),
  PROTOBUF_FIELD_OFFSET(::com::alipay::dds::api::v1::MarkedMultiReference, reference_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse)},
  { 9, 16, sizeof(::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse)},
  { 18, -1, sizeof(::com::alipay::dds::api::v1::MetaData)},
  { 27, -1, sizeof(::com::alipay::dds::api::v1::MarkedMultiReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::alipay::dds::api::v1::_MetaData_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::alipay::dds::api::v1::_MetaData_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::alipay::dds::api::v1::_MetaData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::alipay::dds::api::v1::_MarkedMultiReference_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_common_2eproto = {
  {}, AddDescriptors_common_2eproto, "common.proto", schemas,
  file_default_instances, TableStruct_common_2eproto::offsets,
  file_level_metadata_common_2eproto, 4, file_level_enum_descriptors_common_2eproto, file_level_service_descriptors_common_2eproto,
};

const char descriptor_table_protodef_common_2eproto[] =
  "\n\014common.proto\022\025com.alipay.dds.api.v1\"\222\002"
  "\n\010MetaData\022\014\n\004name\030\001 \001(\t\022\021\n\tnamespace\030\002 "
  "\001(\t\022E\n\013annotations\030\003 \003(\01320.com.alipay.dd"
  "s.api.v1.MetaData.AnnotationsEntry\022;\n\006la"
  "bels\030\004 \003(\0132+.com.alipay.dds.api.v1.MetaD"
  "ata.LabelsEntry\0322\n\020AnnotationsEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013LabelsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"h\n\024Ma"
  "rkedMultiReference\022\014\n\004mark\030\001 \001(\t\022\016\n\006pare"
  "nt\030\002 \001(\t\022\021\n\tnamespace\030\003 \001(\t\022\014\n\004kind\030\004 \001("
  "\t\022\021\n\treference\030\005 \003(\tB2\n\025com.alipay.dds.a"
  "pi.v1B\013CommonProtoP\000Z\ndds/api/v1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_common_2eproto = {
  false, InitDefaults_common_2eproto, 
  descriptor_table_protodef_common_2eproto,
  "common.proto", &assign_descriptors_table_common_2eproto, 480,
};

void AddDescriptors_common_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_common_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_common_2eproto = []() { AddDescriptors_common_2eproto(); return true; }();
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {

// ===================================================================

MetaData_AnnotationsEntry_DoNotUse::MetaData_AnnotationsEntry_DoNotUse() {}
MetaData_AnnotationsEntry_DoNotUse::MetaData_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MetaData_AnnotationsEntry_DoNotUse::MergeFrom(const MetaData_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MetaData_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_common_2eproto);
  return ::file_level_metadata_common_2eproto[0];
}
void MetaData_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetaData_AnnotationsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MetaData_AnnotationsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

MetaData_LabelsEntry_DoNotUse::MetaData_LabelsEntry_DoNotUse() {}
MetaData_LabelsEntry_DoNotUse::MetaData_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MetaData_LabelsEntry_DoNotUse::MergeFrom(const MetaData_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MetaData_LabelsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_common_2eproto);
  return ::file_level_metadata_common_2eproto[1];
}
void MetaData_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetaData_LabelsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MetaData_LabelsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.alipay.dds.api.v1.MetaData.LabelsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.alipay.dds.api.v1.MetaData.LabelsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void MetaData::InitAsDefaultInstance() {
}
class MetaData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaData::kNameFieldNumber;
const int MetaData::kNamespaceFieldNumber;
const int MetaData::kAnnotationsFieldNumber;
const int MetaData::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaData::MetaData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.alipay.dds.api.v1.MetaData)
}
MetaData::MetaData(const MetaData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  // @@protoc_insertion_point(copy_constructor:com.alipay.dds.api.v1.MetaData)
}

void MetaData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetaData_common_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MetaData::~MetaData() {
  // @@protoc_insertion_point(destructor:com.alipay.dds.api.v1.MetaData)
  SharedDtor();
}

void MetaData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetaData& MetaData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetaData_common_2eproto.base);
  return *internal_default_instance();
}


void MetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.alipay.dds.api.v1.MetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotations_.Clear();
  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetaData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetaData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MetaData.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string namespace = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MetaData.namespace");
        object = msg->mutable_namespace_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> annotations = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->annotations_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> labels = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->labels_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.alipay.dds.api.v1.MetaData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          MetaData_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MetaData_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          MetaData_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MetaData_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MetaData.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.alipay.dds.api.v1.MetaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.alipay.dds.api.v1.MetaData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.alipay.dds.api.v1.MetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MetaData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MetaData.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->namespace_(), output);
  }

  // map<string, string> annotations = 3;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaData_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MetaData_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaData_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MetaData_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.alipay.dds.api.v1.MetaData)
}

::google::protobuf::uint8* MetaData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.alipay.dds.api.v1.MetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MetaData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MetaData.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->namespace_(), target);
  }

  // map<string, string> annotations = 3;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.AnnotationsEntry.value");
      }
    };

    if (false &&
        this->annotations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaData_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MetaData_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.alipay.dds.api.v1.MetaData.LabelsEntry.value");
      }
    };

    if (false &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaData_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MetaData_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.alipay.dds.api.v1.MetaData)
  return target;
}

size_t MetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.alipay.dds.api.v1.MetaData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::std::unique_ptr<MetaData_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<MetaData_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.alipay.dds.api.v1.MetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const MetaData* source =
      ::google::protobuf::DynamicCastToGenerated<MetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.alipay.dds.api.v1.MetaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.alipay.dds.api.v1.MetaData)
    MergeFrom(*source);
  }
}

void MetaData::MergeFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.alipay.dds.api.v1.MetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  annotations_.MergeFrom(from.annotations_);
  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
}

void MetaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.alipay.dds.api.v1.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaData::CopyFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.alipay.dds.api.v1.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaData::IsInitialized() const {
  return true;
}

void MetaData::Swap(MetaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaData::InternalSwap(MetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  annotations_.Swap(&other->annotations_);
  labels_.Swap(&other->labels_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  namespace__.Swap(&other->namespace__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MetaData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_common_2eproto);
  return ::file_level_metadata_common_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MarkedMultiReference::InitAsDefaultInstance() {
}
class MarkedMultiReference::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkedMultiReference::kMarkFieldNumber;
const int MarkedMultiReference::kParentFieldNumber;
const int MarkedMultiReference::kNamespaceFieldNumber;
const int MarkedMultiReference::kKindFieldNumber;
const int MarkedMultiReference::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkedMultiReference::MarkedMultiReference()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.alipay.dds.api.v1.MarkedMultiReference)
}
MarkedMultiReference::MarkedMultiReference(const MarkedMultiReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      reference_(from.reference_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kind().size() > 0) {
    kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
  }
  // @@protoc_insertion_point(copy_constructor:com.alipay.dds.api.v1.MarkedMultiReference)
}

void MarkedMultiReference::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MarkedMultiReference_common_2eproto.base);
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MarkedMultiReference::~MarkedMultiReference() {
  // @@protoc_insertion_point(destructor:com.alipay.dds.api.v1.MarkedMultiReference)
  SharedDtor();
}

void MarkedMultiReference::SharedDtor() {
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MarkedMultiReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MarkedMultiReference& MarkedMultiReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MarkedMultiReference_common_2eproto.base);
  return *internal_default_instance();
}


void MarkedMultiReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.alipay.dds.api.v1.MarkedMultiReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reference_.Clear();
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MarkedMultiReference::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MarkedMultiReference*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string mark = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MarkedMultiReference.mark");
        object = msg->mutable_mark();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MarkedMultiReference.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string namespace = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MarkedMultiReference.namespace");
        object = msg->mutable_namespace_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string kind = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MarkedMultiReference.kind");
        object = msg->mutable_kind();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string reference = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("com.alipay.dds.api.v1.MarkedMultiReference.reference");
          object = msg->add_reference();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MarkedMultiReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.alipay.dds.api.v1.MarkedMultiReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mark = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), static_cast<int>(this->mark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MarkedMultiReference.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MarkedMultiReference.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MarkedMultiReference.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kind()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kind().data(), static_cast<int>(this->kind().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MarkedMultiReference.kind"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string reference = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reference()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reference(this->reference_size() - 1).data(),
            static_cast<int>(this->reference(this->reference_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.alipay.dds.api.v1.MarkedMultiReference.reference"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.alipay.dds.api.v1.MarkedMultiReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.alipay.dds.api.v1.MarkedMultiReference)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MarkedMultiReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.alipay.dds.api.v1.MarkedMultiReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mark = 1;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), static_cast<int>(this->mark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mark(), output);
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent(), output);
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->namespace_(), output);
  }

  // string kind = 4;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), static_cast<int>(this->kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.kind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->kind(), output);
  }

  // repeated string reference = 5;
  for (int i = 0, n = this->reference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference(i).data(), static_cast<int>(this->reference(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.reference");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->reference(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.alipay.dds.api.v1.MarkedMultiReference)
}

::google::protobuf::uint8* MarkedMultiReference::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.alipay.dds.api.v1.MarkedMultiReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mark = 1;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), static_cast<int>(this->mark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mark(), target);
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent(), target);
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->namespace_(), target);
  }

  // string kind = 4;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), static_cast<int>(this->kind().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.kind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->kind(), target);
  }

  // repeated string reference = 5;
  for (int i = 0, n = this->reference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference(i).data(), static_cast<int>(this->reference(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.alipay.dds.api.v1.MarkedMultiReference.reference");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->reference(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.alipay.dds.api.v1.MarkedMultiReference)
  return target;
}

size_t MarkedMultiReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.alipay.dds.api.v1.MarkedMultiReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string reference = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reference_size());
  for (int i = 0, n = this->reference_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reference(i));
  }

  // string mark = 1;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // string parent = 2;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  // string kind = 4;
  if (this->kind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MarkedMultiReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.alipay.dds.api.v1.MarkedMultiReference)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkedMultiReference* source =
      ::google::protobuf::DynamicCastToGenerated<MarkedMultiReference>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.alipay.dds.api.v1.MarkedMultiReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.alipay.dds.api.v1.MarkedMultiReference)
    MergeFrom(*source);
  }
}

void MarkedMultiReference::MergeFrom(const MarkedMultiReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.alipay.dds.api.v1.MarkedMultiReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reference_.MergeFrom(from.reference_);
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  if (from.kind().size() > 0) {

    kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
  }
}

void MarkedMultiReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.alipay.dds.api.v1.MarkedMultiReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkedMultiReference::CopyFrom(const MarkedMultiReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.alipay.dds.api.v1.MarkedMultiReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkedMultiReference::IsInitialized() const {
  return true;
}

void MarkedMultiReference::Swap(MarkedMultiReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkedMultiReference::InternalSwap(MarkedMultiReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reference_.InternalSwap(CastToBase(&other->reference_));
  mark_.Swap(&other->mark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  namespace__.Swap(&other->namespace__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kind_.Swap(&other->kind_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MarkedMultiReference::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_common_2eproto);
  return ::file_level_metadata_common_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::com::alipay::dds::api::v1::MetaData_AnnotationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::com::alipay::dds::api::v1::MetaData_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::alipay::dds::api::v1::MetaData* Arena::CreateMaybeMessage< ::com::alipay::dds::api::v1::MetaData >(Arena* arena) {
  return Arena::CreateInternal< ::com::alipay::dds::api::v1::MetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::com::alipay::dds::api::v1::MarkedMultiReference* Arena::CreateMaybeMessage< ::com::alipay::dds::api::v1::MarkedMultiReference >(Arena* arena) {
  return Arena::CreateInternal< ::com::alipay::dds::api::v1::MarkedMultiReference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
