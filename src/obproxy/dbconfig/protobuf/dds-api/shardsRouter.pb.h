// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shardsRouter.proto

#ifndef PROTOBUF_INCLUDED_shardsRouter_2eproto
#define PROTOBUF_INCLUDED_shardsRouter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_shardsRouter_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_shardsRouter_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_shardsRouter_2eproto();
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {
class MarkedRouter;
class MarkedRouterDefaultTypeInternal;
extern MarkedRouterDefaultTypeInternal _MarkedRouter_default_instance_;
class Router;
class RouterDefaultTypeInternal;
extern RouterDefaultTypeInternal _Router_default_instance_;
class Router_RulesEntry_DoNotUse;
class Router_RulesEntry_DoNotUseDefaultTypeInternal;
extern Router_RulesEntry_DoNotUseDefaultTypeInternal _Router_RulesEntry_DoNotUse_default_instance_;
class ShardsRouter;
class ShardsRouterDefaultTypeInternal;
extern ShardsRouterDefaultTypeInternal _ShardsRouter_default_instance_;
class ShardsRouter_VariablesEntry_DoNotUse;
class ShardsRouter_VariablesEntry_DoNotUseDefaultTypeInternal;
extern ShardsRouter_VariablesEntry_DoNotUseDefaultTypeInternal _ShardsRouter_VariablesEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::alipay::dds::api::v1::MarkedRouter* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::MarkedRouter>(Arena*);
template<> ::com::alipay::dds::api::v1::Router* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::Router>(Arena*);
template<> ::com::alipay::dds::api::v1::Router_RulesEntry_DoNotUse* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::Router_RulesEntry_DoNotUse>(Arena*);
template<> ::com::alipay::dds::api::v1::ShardsRouter* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::ShardsRouter>(Arena*);
template<> ::com::alipay::dds::api::v1::ShardsRouter_VariablesEntry_DoNotUse* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::ShardsRouter_VariablesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {

// ===================================================================

class Router_RulesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Router_RulesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Router_RulesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Router_RulesEntry_DoNotUse();
  Router_RulesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Router_RulesEntry_DoNotUse& other);
  static const Router_RulesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Router_RulesEntry_DoNotUse*>(&_Router_RulesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Router :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.alipay.dds.api.v1.Router) */ {
 public:
  Router();
  virtual ~Router();

  Router(const Router& from);

  inline Router& operator=(const Router& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Router(Router&& from) noexcept
    : Router() {
    *this = ::std::move(from);
  }

  inline Router& operator=(Router&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Router& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Router* internal_default_instance() {
    return reinterpret_cast<const Router*>(
               &_Router_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Router* other);
  friend void swap(Router& a, Router& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Router* New() const final {
    return CreateMaybeMessage<Router>(nullptr);
  }

  Router* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Router>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Router& from);
  void MergeFrom(const Router& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Router* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> rules = 1;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      rules() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_rules();

  // @@protoc_insertion_point(class_scope:com.alipay.dds.api.v1.Router)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Router_RulesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > rules_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shardsRouter_2eproto;
};
// -------------------------------------------------------------------

class MarkedRouter :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.alipay.dds.api.v1.MarkedRouter) */ {
 public:
  MarkedRouter();
  virtual ~MarkedRouter();

  MarkedRouter(const MarkedRouter& from);

  inline MarkedRouter& operator=(const MarkedRouter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkedRouter(MarkedRouter&& from) noexcept
    : MarkedRouter() {
    *this = ::std::move(from);
  }

  inline MarkedRouter& operator=(MarkedRouter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MarkedRouter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarkedRouter* internal_default_instance() {
    return reinterpret_cast<const MarkedRouter*>(
               &_MarkedRouter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MarkedRouter* other);
  friend void swap(MarkedRouter& a, MarkedRouter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkedRouter* New() const final {
    return CreateMaybeMessage<MarkedRouter>(nullptr);
  }

  MarkedRouter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MarkedRouter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MarkedRouter& from);
  void MergeFrom(const MarkedRouter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarkedRouter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mark = 1;
  void clear_mark();
  static const int kMarkFieldNumber = 1;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // .com.alipay.dds.api.v1.Router router = 2;
  bool has_router() const;
  void clear_router();
  static const int kRouterFieldNumber = 2;
  const ::com::alipay::dds::api::v1::Router& router() const;
  ::com::alipay::dds::api::v1::Router* release_router();
  ::com::alipay::dds::api::v1::Router* mutable_router();
  void set_allocated_router(::com::alipay::dds::api::v1::Router* router);

  // bool sequence = 3;
  void clear_sequence();
  static const int kSequenceFieldNumber = 3;
  bool sequence() const;
  void set_sequence(bool value);

  // @@protoc_insertion_point(class_scope:com.alipay.dds.api.v1.MarkedRouter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::com::alipay::dds::api::v1::Router* router_;
  bool sequence_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shardsRouter_2eproto;
};
// -------------------------------------------------------------------

class ShardsRouter_VariablesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ShardsRouter_VariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<ShardsRouter_VariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ShardsRouter_VariablesEntry_DoNotUse();
  ShardsRouter_VariablesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ShardsRouter_VariablesEntry_DoNotUse& other);
  static const ShardsRouter_VariablesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ShardsRouter_VariablesEntry_DoNotUse*>(&_ShardsRouter_VariablesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ShardsRouter :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.alipay.dds.api.v1.ShardsRouter) */ {
 public:
  ShardsRouter();
  virtual ~ShardsRouter();

  ShardsRouter(const ShardsRouter& from);

  inline ShardsRouter& operator=(const ShardsRouter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardsRouter(ShardsRouter&& from) noexcept
    : ShardsRouter() {
    *this = ::std::move(from);
  }

  inline ShardsRouter& operator=(ShardsRouter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ShardsRouter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardsRouter* internal_default_instance() {
    return reinterpret_cast<const ShardsRouter*>(
               &_ShardsRouter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ShardsRouter* other);
  friend void swap(ShardsRouter& a, ShardsRouter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardsRouter* New() const final {
    return CreateMaybeMessage<ShardsRouter>(nullptr);
  }

  ShardsRouter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardsRouter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardsRouter& from);
  void MergeFrom(const ShardsRouter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardsRouter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .com.alipay.dds.api.v1.MarkedRouter routers = 2;
  int routers_size() const;
  void clear_routers();
  static const int kRoutersFieldNumber = 2;
  ::com::alipay::dds::api::v1::MarkedRouter* mutable_routers(int index);
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedRouter >*
      mutable_routers();
  const ::com::alipay::dds::api::v1::MarkedRouter& routers(int index) const;
  ::com::alipay::dds::api::v1::MarkedRouter* add_routers();
  const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedRouter >&
      routers() const;

  // map<string, string> variables = 3;
  int variables_size() const;
  void clear_variables();
  static const int kVariablesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      variables() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_variables();

  // repeated .com.alipay.dds.api.v1.MarkedMultiReference extension = 4;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 4;
  ::com::alipay::dds::api::v1::MarkedMultiReference* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >*
      mutable_extension();
  const ::com::alipay::dds::api::v1::MarkedMultiReference& extension(int index) const;
  ::com::alipay::dds::api::v1::MarkedMultiReference* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >&
      extension() const;

  // .com.alipay.dds.api.v1.MetaData metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  const ::com::alipay::dds::api::v1::MetaData& metadata() const;
  ::com::alipay::dds::api::v1::MetaData* release_metadata();
  ::com::alipay::dds::api::v1::MetaData* mutable_metadata();
  void set_allocated_metadata(::com::alipay::dds::api::v1::MetaData* metadata);

  // @@protoc_insertion_point(class_scope:com.alipay.dds.api.v1.ShardsRouter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedRouter > routers_;
  ::google::protobuf::internal::MapField<
      ShardsRouter_VariablesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > variables_;
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference > extension_;
  ::com::alipay::dds::api::v1::MetaData* metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shardsRouter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Router

// map<string, string> rules = 1;
inline int Router::rules_size() const {
  return rules_.size();
}
inline void Router::clear_rules() {
  rules_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Router::rules() const {
  // @@protoc_insertion_point(field_map:com.alipay.dds.api.v1.Router.rules)
  return rules_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Router::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_map:com.alipay.dds.api.v1.Router.rules)
  return rules_.MutableMap();
}

// -------------------------------------------------------------------

// MarkedRouter

// string mark = 1;
inline void MarkedRouter::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MarkedRouter::mark() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.MarkedRouter.mark)
  return mark_.GetNoArena();
}
inline void MarkedRouter::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.MarkedRouter.mark)
}
#if LANG_CXX11
inline void MarkedRouter::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.MarkedRouter.mark)
}
#endif
inline void MarkedRouter::set_mark(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.MarkedRouter.mark)
}
inline void MarkedRouter::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.MarkedRouter.mark)
}
inline ::std::string* MarkedRouter::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.MarkedRouter.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarkedRouter::release_mark() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.MarkedRouter.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarkedRouter::set_allocated_mark(::std::string* mark) {
  if (mark != nullptr) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.MarkedRouter.mark)
}

// .com.alipay.dds.api.v1.Router router = 2;
inline bool MarkedRouter::has_router() const {
  return this != internal_default_instance() && router_ != nullptr;
}
inline void MarkedRouter::clear_router() {
  if (GetArenaNoVirtual() == nullptr && router_ != nullptr) {
    delete router_;
  }
  router_ = nullptr;
}
inline const ::com::alipay::dds::api::v1::Router& MarkedRouter::router() const {
  const ::com::alipay::dds::api::v1::Router* p = router_;
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.MarkedRouter.router)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::alipay::dds::api::v1::Router*>(
      &::com::alipay::dds::api::v1::_Router_default_instance_);
}
inline ::com::alipay::dds::api::v1::Router* MarkedRouter::release_router() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.MarkedRouter.router)
  
  ::com::alipay::dds::api::v1::Router* temp = router_;
  router_ = nullptr;
  return temp;
}
inline ::com::alipay::dds::api::v1::Router* MarkedRouter::mutable_router() {
  
  if (router_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::alipay::dds::api::v1::Router>(GetArenaNoVirtual());
    router_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.MarkedRouter.router)
  return router_;
}
inline void MarkedRouter::set_allocated_router(::com::alipay::dds::api::v1::Router* router) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete router_;
  }
  if (router) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      router = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, router, submessage_arena);
    }
    
  } else {
    
  }
  router_ = router;
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.MarkedRouter.router)
}

// bool sequence = 3;
inline void MarkedRouter::clear_sequence() {
  sequence_ = false;
}
inline bool MarkedRouter::sequence() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.MarkedRouter.sequence)
  return sequence_;
}
inline void MarkedRouter::set_sequence(bool value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.MarkedRouter.sequence)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ShardsRouter

// .com.alipay.dds.api.v1.MetaData metadata = 1;
inline bool ShardsRouter::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline const ::com::alipay::dds::api::v1::MetaData& ShardsRouter::metadata() const {
  const ::com::alipay::dds::api::v1::MetaData* p = metadata_;
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.ShardsRouter.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::alipay::dds::api::v1::MetaData*>(
      &::com::alipay::dds::api::v1::_MetaData_default_instance_);
}
inline ::com::alipay::dds::api::v1::MetaData* ShardsRouter::release_metadata() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.ShardsRouter.metadata)
  
  ::com::alipay::dds::api::v1::MetaData* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::com::alipay::dds::api::v1::MetaData* ShardsRouter::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::alipay::dds::api::v1::MetaData>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.ShardsRouter.metadata)
  return metadata_;
}
inline void ShardsRouter::set_allocated_metadata(::com::alipay::dds::api::v1::MetaData* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.ShardsRouter.metadata)
}

// repeated .com.alipay.dds.api.v1.MarkedRouter routers = 2;
inline int ShardsRouter::routers_size() const {
  return routers_.size();
}
inline void ShardsRouter::clear_routers() {
  routers_.Clear();
}
inline ::com::alipay::dds::api::v1::MarkedRouter* ShardsRouter::mutable_routers(int index) {
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.ShardsRouter.routers)
  return routers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedRouter >*
ShardsRouter::mutable_routers() {
  // @@protoc_insertion_point(field_mutable_list:com.alipay.dds.api.v1.ShardsRouter.routers)
  return &routers_;
}
inline const ::com::alipay::dds::api::v1::MarkedRouter& ShardsRouter::routers(int index) const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.ShardsRouter.routers)
  return routers_.Get(index);
}
inline ::com::alipay::dds::api::v1::MarkedRouter* ShardsRouter::add_routers() {
  // @@protoc_insertion_point(field_add:com.alipay.dds.api.v1.ShardsRouter.routers)
  return routers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedRouter >&
ShardsRouter::routers() const {
  // @@protoc_insertion_point(field_list:com.alipay.dds.api.v1.ShardsRouter.routers)
  return routers_;
}

// map<string, string> variables = 3;
inline int ShardsRouter::variables_size() const {
  return variables_.size();
}
inline void ShardsRouter::clear_variables() {
  variables_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ShardsRouter::variables() const {
  // @@protoc_insertion_point(field_map:com.alipay.dds.api.v1.ShardsRouter.variables)
  return variables_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ShardsRouter::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_map:com.alipay.dds.api.v1.ShardsRouter.variables)
  return variables_.MutableMap();
}

// repeated .com.alipay.dds.api.v1.MarkedMultiReference extension = 4;
inline int ShardsRouter::extension_size() const {
  return extension_.size();
}
inline ::com::alipay::dds::api::v1::MarkedMultiReference* ShardsRouter::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.ShardsRouter.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >*
ShardsRouter::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:com.alipay.dds.api.v1.ShardsRouter.extension)
  return &extension_;
}
inline const ::com::alipay::dds::api::v1::MarkedMultiReference& ShardsRouter::extension(int index) const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.ShardsRouter.extension)
  return extension_.Get(index);
}
inline ::com::alipay::dds::api::v1::MarkedMultiReference* ShardsRouter::add_extension() {
  // @@protoc_insertion_point(field_add:com.alipay.dds.api.v1.ShardsRouter.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >&
ShardsRouter::extension() const {
  // @@protoc_insertion_point(field_list:com.alipay.dds.api.v1.ShardsRouter.extension)
  return extension_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_shardsRouter_2eproto
