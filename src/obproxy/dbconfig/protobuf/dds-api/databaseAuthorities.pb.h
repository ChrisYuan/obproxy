// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: databaseAuthorities.proto

#ifndef PROTOBUF_INCLUDED_databaseAuthorities_2eproto
#define PROTOBUF_INCLUDED_databaseAuthorities_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_databaseAuthorities_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_databaseAuthorities_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_databaseAuthorities_2eproto();
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {
class DatabaseAuthorities;
class DatabaseAuthoritiesDefaultTypeInternal;
extern DatabaseAuthoritiesDefaultTypeInternal _DatabaseAuthorities_default_instance_;
class DatabaseAuthorities_VariablesEntry_DoNotUse;
class DatabaseAuthorities_VariablesEntry_DoNotUseDefaultTypeInternal;
extern DatabaseAuthorities_VariablesEntry_DoNotUseDefaultTypeInternal _DatabaseAuthorities_VariablesEntry_DoNotUse_default_instance_;
class DatabaseUser;
class DatabaseUserDefaultTypeInternal;
extern DatabaseUserDefaultTypeInternal _DatabaseUser_default_instance_;
}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::alipay::dds::api::v1::DatabaseAuthorities* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::DatabaseAuthorities>(Arena*);
template<> ::com::alipay::dds::api::v1::DatabaseAuthorities_VariablesEntry_DoNotUse* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::DatabaseAuthorities_VariablesEntry_DoNotUse>(Arena*);
template<> ::com::alipay::dds::api::v1::DatabaseUser* Arena::CreateMaybeMessage<::com::alipay::dds::api::v1::DatabaseUser>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace alipay {
namespace dds {
namespace api {
namespace v1 {

// ===================================================================

class DatabaseAuthorities_VariablesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DatabaseAuthorities_VariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<DatabaseAuthorities_VariablesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DatabaseAuthorities_VariablesEntry_DoNotUse();
  DatabaseAuthorities_VariablesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DatabaseAuthorities_VariablesEntry_DoNotUse& other);
  static const DatabaseAuthorities_VariablesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DatabaseAuthorities_VariablesEntry_DoNotUse*>(&_DatabaseAuthorities_VariablesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DatabaseAuthorities :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.alipay.dds.api.v1.DatabaseAuthorities) */ {
 public:
  DatabaseAuthorities();
  virtual ~DatabaseAuthorities();

  DatabaseAuthorities(const DatabaseAuthorities& from);

  inline DatabaseAuthorities& operator=(const DatabaseAuthorities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DatabaseAuthorities(DatabaseAuthorities&& from) noexcept
    : DatabaseAuthorities() {
    *this = ::std::move(from);
  }

  inline DatabaseAuthorities& operator=(DatabaseAuthorities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DatabaseAuthorities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DatabaseAuthorities* internal_default_instance() {
    return reinterpret_cast<const DatabaseAuthorities*>(
               &_DatabaseAuthorities_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DatabaseAuthorities* other);
  friend void swap(DatabaseAuthorities& a, DatabaseAuthorities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DatabaseAuthorities* New() const final {
    return CreateMaybeMessage<DatabaseAuthorities>(nullptr);
  }

  DatabaseAuthorities* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DatabaseAuthorities>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DatabaseAuthorities& from);
  void MergeFrom(const DatabaseAuthorities& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DatabaseAuthorities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .com.alipay.dds.api.v1.DatabaseUser users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  ::com::alipay::dds::api::v1::DatabaseUser* mutable_users(int index);
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::DatabaseUser >*
      mutable_users();
  const ::com::alipay::dds::api::v1::DatabaseUser& users(int index) const;
  ::com::alipay::dds::api::v1::DatabaseUser* add_users();
  const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::DatabaseUser >&
      users() const;

  // map<string, string> variables = 3;
  int variables_size() const;
  void clear_variables();
  static const int kVariablesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      variables() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_variables();

  // repeated .com.alipay.dds.api.v1.MarkedMultiReference extension = 4;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 4;
  ::com::alipay::dds::api::v1::MarkedMultiReference* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >*
      mutable_extension();
  const ::com::alipay::dds::api::v1::MarkedMultiReference& extension(int index) const;
  ::com::alipay::dds::api::v1::MarkedMultiReference* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >&
      extension() const;

  // .com.alipay.dds.api.v1.MetaData metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  const ::com::alipay::dds::api::v1::MetaData& metadata() const;
  ::com::alipay::dds::api::v1::MetaData* release_metadata();
  ::com::alipay::dds::api::v1::MetaData* mutable_metadata();
  void set_allocated_metadata(::com::alipay::dds::api::v1::MetaData* metadata);

  // @@protoc_insertion_point(class_scope:com.alipay.dds.api.v1.DatabaseAuthorities)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::DatabaseUser > users_;
  ::google::protobuf::internal::MapField<
      DatabaseAuthorities_VariablesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > variables_;
  ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference > extension_;
  ::com::alipay::dds::api::v1::MetaData* metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_databaseAuthorities_2eproto;
};
// -------------------------------------------------------------------

class DatabaseUser :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.alipay.dds.api.v1.DatabaseUser) */ {
 public:
  DatabaseUser();
  virtual ~DatabaseUser();

  DatabaseUser(const DatabaseUser& from);

  inline DatabaseUser& operator=(const DatabaseUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DatabaseUser(DatabaseUser&& from) noexcept
    : DatabaseUser() {
    *this = ::std::move(from);
  }

  inline DatabaseUser& operator=(DatabaseUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DatabaseUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DatabaseUser* internal_default_instance() {
    return reinterpret_cast<const DatabaseUser*>(
               &_DatabaseUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DatabaseUser* other);
  friend void swap(DatabaseUser& a, DatabaseUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DatabaseUser* New() const final {
    return CreateMaybeMessage<DatabaseUser>(nullptr);
  }

  DatabaseUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DatabaseUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DatabaseUser& from);
  void MergeFrom(const DatabaseUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DatabaseUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string host = 2;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string select_priv = 4;
  void clear_select_priv();
  static const int kSelectPrivFieldNumber = 4;
  const ::std::string& select_priv() const;
  void set_select_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_select_priv(::std::string&& value);
  #endif
  void set_select_priv(const char* value);
  void set_select_priv(const char* value, size_t size);
  ::std::string* mutable_select_priv();
  ::std::string* release_select_priv();
  void set_allocated_select_priv(::std::string* select_priv);

  // string insert_priv = 5;
  void clear_insert_priv();
  static const int kInsertPrivFieldNumber = 5;
  const ::std::string& insert_priv() const;
  void set_insert_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_insert_priv(::std::string&& value);
  #endif
  void set_insert_priv(const char* value);
  void set_insert_priv(const char* value, size_t size);
  ::std::string* mutable_insert_priv();
  ::std::string* release_insert_priv();
  void set_allocated_insert_priv(::std::string* insert_priv);

  // string update_priv = 6;
  void clear_update_priv();
  static const int kUpdatePrivFieldNumber = 6;
  const ::std::string& update_priv() const;
  void set_update_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_update_priv(::std::string&& value);
  #endif
  void set_update_priv(const char* value);
  void set_update_priv(const char* value, size_t size);
  ::std::string* mutable_update_priv();
  ::std::string* release_update_priv();
  void set_allocated_update_priv(::std::string* update_priv);

  // string delete_priv = 7;
  void clear_delete_priv();
  static const int kDeletePrivFieldNumber = 7;
  const ::std::string& delete_priv() const;
  void set_delete_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_delete_priv(::std::string&& value);
  #endif
  void set_delete_priv(const char* value);
  void set_delete_priv(const char* value, size_t size);
  ::std::string* mutable_delete_priv();
  ::std::string* release_delete_priv();
  void set_allocated_delete_priv(::std::string* delete_priv);

  // string create_priv = 8;
  void clear_create_priv();
  static const int kCreatePrivFieldNumber = 8;
  const ::std::string& create_priv() const;
  void set_create_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_create_priv(::std::string&& value);
  #endif
  void set_create_priv(const char* value);
  void set_create_priv(const char* value, size_t size);
  ::std::string* mutable_create_priv();
  ::std::string* release_create_priv();
  void set_allocated_create_priv(::std::string* create_priv);

  // string drop_priv = 9;
  void clear_drop_priv();
  static const int kDropPrivFieldNumber = 9;
  const ::std::string& drop_priv() const;
  void set_drop_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_drop_priv(::std::string&& value);
  #endif
  void set_drop_priv(const char* value);
  void set_drop_priv(const char* value, size_t size);
  ::std::string* mutable_drop_priv();
  ::std::string* release_drop_priv();
  void set_allocated_drop_priv(::std::string* drop_priv);

  // string index_priv = 10;
  void clear_index_priv();
  static const int kIndexPrivFieldNumber = 10;
  const ::std::string& index_priv() const;
  void set_index_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_index_priv(::std::string&& value);
  #endif
  void set_index_priv(const char* value);
  void set_index_priv(const char* value, size_t size);
  ::std::string* mutable_index_priv();
  ::std::string* release_index_priv();
  void set_allocated_index_priv(::std::string* index_priv);

  // string alter_priv = 11;
  void clear_alter_priv();
  static const int kAlterPrivFieldNumber = 11;
  const ::std::string& alter_priv() const;
  void set_alter_priv(const ::std::string& value);
  #if LANG_CXX11
  void set_alter_priv(::std::string&& value);
  #endif
  void set_alter_priv(const char* value);
  void set_alter_priv(const char* value, size_t size);
  ::std::string* mutable_alter_priv();
  ::std::string* release_alter_priv();
  void set_allocated_alter_priv(::std::string* alter_priv);

  // @@protoc_insertion_point(class_scope:com.alipay.dds.api.v1.DatabaseUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr select_priv_;
  ::google::protobuf::internal::ArenaStringPtr insert_priv_;
  ::google::protobuf::internal::ArenaStringPtr update_priv_;
  ::google::protobuf::internal::ArenaStringPtr delete_priv_;
  ::google::protobuf::internal::ArenaStringPtr create_priv_;
  ::google::protobuf::internal::ArenaStringPtr drop_priv_;
  ::google::protobuf::internal::ArenaStringPtr index_priv_;
  ::google::protobuf::internal::ArenaStringPtr alter_priv_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_databaseAuthorities_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DatabaseAuthorities

// .com.alipay.dds.api.v1.MetaData metadata = 1;
inline bool DatabaseAuthorities::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline const ::com::alipay::dds::api::v1::MetaData& DatabaseAuthorities::metadata() const {
  const ::com::alipay::dds::api::v1::MetaData* p = metadata_;
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseAuthorities.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::alipay::dds::api::v1::MetaData*>(
      &::com::alipay::dds::api::v1::_MetaData_default_instance_);
}
inline ::com::alipay::dds::api::v1::MetaData* DatabaseAuthorities::release_metadata() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseAuthorities.metadata)
  
  ::com::alipay::dds::api::v1::MetaData* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::com::alipay::dds::api::v1::MetaData* DatabaseAuthorities::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::alipay::dds::api::v1::MetaData>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseAuthorities.metadata)
  return metadata_;
}
inline void DatabaseAuthorities::set_allocated_metadata(::com::alipay::dds::api::v1::MetaData* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseAuthorities.metadata)
}

// repeated .com.alipay.dds.api.v1.DatabaseUser users = 2;
inline int DatabaseAuthorities::users_size() const {
  return users_.size();
}
inline void DatabaseAuthorities::clear_users() {
  users_.Clear();
}
inline ::com::alipay::dds::api::v1::DatabaseUser* DatabaseAuthorities::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseAuthorities.users)
  return users_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::DatabaseUser >*
DatabaseAuthorities::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:com.alipay.dds.api.v1.DatabaseAuthorities.users)
  return &users_;
}
inline const ::com::alipay::dds::api::v1::DatabaseUser& DatabaseAuthorities::users(int index) const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseAuthorities.users)
  return users_.Get(index);
}
inline ::com::alipay::dds::api::v1::DatabaseUser* DatabaseAuthorities::add_users() {
  // @@protoc_insertion_point(field_add:com.alipay.dds.api.v1.DatabaseAuthorities.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::DatabaseUser >&
DatabaseAuthorities::users() const {
  // @@protoc_insertion_point(field_list:com.alipay.dds.api.v1.DatabaseAuthorities.users)
  return users_;
}

// map<string, string> variables = 3;
inline int DatabaseAuthorities::variables_size() const {
  return variables_.size();
}
inline void DatabaseAuthorities::clear_variables() {
  variables_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
DatabaseAuthorities::variables() const {
  // @@protoc_insertion_point(field_map:com.alipay.dds.api.v1.DatabaseAuthorities.variables)
  return variables_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
DatabaseAuthorities::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_map:com.alipay.dds.api.v1.DatabaseAuthorities.variables)
  return variables_.MutableMap();
}

// repeated .com.alipay.dds.api.v1.MarkedMultiReference extension = 4;
inline int DatabaseAuthorities::extension_size() const {
  return extension_.size();
}
inline ::com::alipay::dds::api::v1::MarkedMultiReference* DatabaseAuthorities::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseAuthorities.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >*
DatabaseAuthorities::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:com.alipay.dds.api.v1.DatabaseAuthorities.extension)
  return &extension_;
}
inline const ::com::alipay::dds::api::v1::MarkedMultiReference& DatabaseAuthorities::extension(int index) const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseAuthorities.extension)
  return extension_.Get(index);
}
inline ::com::alipay::dds::api::v1::MarkedMultiReference* DatabaseAuthorities::add_extension() {
  // @@protoc_insertion_point(field_add:com.alipay.dds.api.v1.DatabaseAuthorities.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::alipay::dds::api::v1::MarkedMultiReference >&
DatabaseAuthorities::extension() const {
  // @@protoc_insertion_point(field_list:com.alipay.dds.api.v1.DatabaseAuthorities.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DatabaseUser

// string user = 1;
inline void DatabaseUser::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::user() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.user)
  return user_.GetNoArena();
}
inline void DatabaseUser::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.user)
}
#if LANG_CXX11
inline void DatabaseUser::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.user)
}
#endif
inline void DatabaseUser::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.user)
}
inline void DatabaseUser::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.user)
}
inline ::std::string* DatabaseUser::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_user() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_user(::std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.user)
}

// string host = 2;
inline void DatabaseUser::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::host() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.host)
  return host_.GetNoArena();
}
inline void DatabaseUser::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.host)
}
#if LANG_CXX11
inline void DatabaseUser::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.host)
}
#endif
inline void DatabaseUser::set_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.host)
}
inline void DatabaseUser::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.host)
}
inline ::std::string* DatabaseUser::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_host() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_host(::std::string* host) {
  if (host != nullptr) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.host)
}

// string password = 3;
inline void DatabaseUser::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::password() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.password)
  return password_.GetNoArena();
}
inline void DatabaseUser::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.password)
}
#if LANG_CXX11
inline void DatabaseUser::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.password)
}
#endif
inline void DatabaseUser::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.password)
}
inline void DatabaseUser::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.password)
}
inline ::std::string* DatabaseUser::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_password() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.password)
}

// string select_priv = 4;
inline void DatabaseUser::clear_select_priv() {
  select_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::select_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.select_priv)
  return select_priv_.GetNoArena();
}
inline void DatabaseUser::set_select_priv(const ::std::string& value) {
  
  select_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.select_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_select_priv(::std::string&& value) {
  
  select_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.select_priv)
}
#endif
inline void DatabaseUser::set_select_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  select_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.select_priv)
}
inline void DatabaseUser::set_select_priv(const char* value, size_t size) {
  
  select_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.select_priv)
}
inline ::std::string* DatabaseUser::mutable_select_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.select_priv)
  return select_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_select_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.select_priv)
  
  return select_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_select_priv(::std::string* select_priv) {
  if (select_priv != nullptr) {
    
  } else {
    
  }
  select_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), select_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.select_priv)
}

// string insert_priv = 5;
inline void DatabaseUser::clear_insert_priv() {
  insert_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::insert_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
  return insert_priv_.GetNoArena();
}
inline void DatabaseUser::set_insert_priv(const ::std::string& value) {
  
  insert_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_insert_priv(::std::string&& value) {
  
  insert_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
}
#endif
inline void DatabaseUser::set_insert_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  insert_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
}
inline void DatabaseUser::set_insert_priv(const char* value, size_t size) {
  
  insert_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
}
inline ::std::string* DatabaseUser::mutable_insert_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
  return insert_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_insert_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
  
  return insert_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_insert_priv(::std::string* insert_priv) {
  if (insert_priv != nullptr) {
    
  } else {
    
  }
  insert_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), insert_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.insert_priv)
}

// string update_priv = 6;
inline void DatabaseUser::clear_update_priv() {
  update_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::update_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.update_priv)
  return update_priv_.GetNoArena();
}
inline void DatabaseUser::set_update_priv(const ::std::string& value) {
  
  update_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.update_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_update_priv(::std::string&& value) {
  
  update_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.update_priv)
}
#endif
inline void DatabaseUser::set_update_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  update_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.update_priv)
}
inline void DatabaseUser::set_update_priv(const char* value, size_t size) {
  
  update_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.update_priv)
}
inline ::std::string* DatabaseUser::mutable_update_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.update_priv)
  return update_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_update_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.update_priv)
  
  return update_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_update_priv(::std::string* update_priv) {
  if (update_priv != nullptr) {
    
  } else {
    
  }
  update_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.update_priv)
}

// string delete_priv = 7;
inline void DatabaseUser::clear_delete_priv() {
  delete_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::delete_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
  return delete_priv_.GetNoArena();
}
inline void DatabaseUser::set_delete_priv(const ::std::string& value) {
  
  delete_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_delete_priv(::std::string&& value) {
  
  delete_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
}
#endif
inline void DatabaseUser::set_delete_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  delete_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
}
inline void DatabaseUser::set_delete_priv(const char* value, size_t size) {
  
  delete_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
}
inline ::std::string* DatabaseUser::mutable_delete_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
  return delete_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_delete_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
  
  return delete_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_delete_priv(::std::string* delete_priv) {
  if (delete_priv != nullptr) {
    
  } else {
    
  }
  delete_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delete_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.delete_priv)
}

// string create_priv = 8;
inline void DatabaseUser::clear_create_priv() {
  create_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::create_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.create_priv)
  return create_priv_.GetNoArena();
}
inline void DatabaseUser::set_create_priv(const ::std::string& value) {
  
  create_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.create_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_create_priv(::std::string&& value) {
  
  create_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.create_priv)
}
#endif
inline void DatabaseUser::set_create_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  create_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.create_priv)
}
inline void DatabaseUser::set_create_priv(const char* value, size_t size) {
  
  create_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.create_priv)
}
inline ::std::string* DatabaseUser::mutable_create_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.create_priv)
  return create_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_create_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.create_priv)
  
  return create_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_create_priv(::std::string* create_priv) {
  if (create_priv != nullptr) {
    
  } else {
    
  }
  create_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.create_priv)
}

// string drop_priv = 9;
inline void DatabaseUser::clear_drop_priv() {
  drop_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::drop_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
  return drop_priv_.GetNoArena();
}
inline void DatabaseUser::set_drop_priv(const ::std::string& value) {
  
  drop_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_drop_priv(::std::string&& value) {
  
  drop_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
}
#endif
inline void DatabaseUser::set_drop_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  drop_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
}
inline void DatabaseUser::set_drop_priv(const char* value, size_t size) {
  
  drop_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
}
inline ::std::string* DatabaseUser::mutable_drop_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
  return drop_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_drop_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
  
  return drop_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_drop_priv(::std::string* drop_priv) {
  if (drop_priv != nullptr) {
    
  } else {
    
  }
  drop_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drop_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.drop_priv)
}

// string index_priv = 10;
inline void DatabaseUser::clear_index_priv() {
  index_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::index_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.index_priv)
  return index_priv_.GetNoArena();
}
inline void DatabaseUser::set_index_priv(const ::std::string& value) {
  
  index_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.index_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_index_priv(::std::string&& value) {
  
  index_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.index_priv)
}
#endif
inline void DatabaseUser::set_index_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  index_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.index_priv)
}
inline void DatabaseUser::set_index_priv(const char* value, size_t size) {
  
  index_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.index_priv)
}
inline ::std::string* DatabaseUser::mutable_index_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.index_priv)
  return index_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_index_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.index_priv)
  
  return index_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_index_priv(::std::string* index_priv) {
  if (index_priv != nullptr) {
    
  } else {
    
  }
  index_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.index_priv)
}

// string alter_priv = 11;
inline void DatabaseUser::clear_alter_priv() {
  alter_priv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DatabaseUser::alter_priv() const {
  // @@protoc_insertion_point(field_get:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
  return alter_priv_.GetNoArena();
}
inline void DatabaseUser::set_alter_priv(const ::std::string& value) {
  
  alter_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
}
#if LANG_CXX11
inline void DatabaseUser::set_alter_priv(::std::string&& value) {
  
  alter_priv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
}
#endif
inline void DatabaseUser::set_alter_priv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  alter_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
}
inline void DatabaseUser::set_alter_priv(const char* value, size_t size) {
  
  alter_priv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
}
inline ::std::string* DatabaseUser::mutable_alter_priv() {
  
  // @@protoc_insertion_point(field_mutable:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
  return alter_priv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabaseUser::release_alter_priv() {
  // @@protoc_insertion_point(field_release:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
  
  return alter_priv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabaseUser::set_allocated_alter_priv(::std::string* alter_priv) {
  if (alter_priv != nullptr) {
    
  } else {
    
  }
  alter_priv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alter_priv);
  // @@protoc_insertion_point(field_set_allocated:com.alipay.dds.api.v1.DatabaseUser.alter_priv)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace api
}  // namespace dds
}  // namespace alipay
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_databaseAuthorities_2eproto
